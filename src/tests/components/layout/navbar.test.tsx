/**
 * Navbar „Ç≥„É≥„Éù„Éº„Éç„É≥„Éà „ÉÜ„Çπ„Éà
 *
 * „ÉÜ„Çπ„ÉàÂØæË±°: src/components/layout/navbar.tsx
 * „ÉÜ„Çπ„ÉàË®àÁîª: Docs/tests/TEST_CASES.md ¬ß „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Ê©üËÉΩ
 * ÁõÆÊ®ô„Ç´„Éê„É¨„ÉÉ„Ç∏: 75%‰ª•‰∏ä
 */

import React from 'react';
import { render, screen, fireEvent, waitFor } from '@testing-library/react';
import Navbar from '@/components/layout/navbar';
import * as navigation from 'next/navigation';
import { createClient } from '@/lib/supabase/client';

// „É¢„ÉÉ„ÇØ
jest.mock('@/lib/supabase/client');

describe('Navbar Component', () => {
  const mockPush = jest.fn();
  const mockSignOut = jest.fn();

  beforeEach(() => {
    jest.clearAllMocks();

    // useRouter„ÅÆ„É¢„ÉÉ„ÇØÔºàjest.setup„Åß„É¢„ÉÉ„ÇØ„Åï„Çå„Å¶„ÅÑ„Çã„ÇÇ„ÅÆ„Çí‰∏äÊõ∏„ÅçÔºâ
    jest.spyOn(navigation, 'useRouter').mockReturnValue({
      push: mockPush,
      replace: jest.fn(),
      prefetch: jest.fn(),
      back: jest.fn(),
    } as any);

    (createClient as jest.Mock).mockReturnValue({
      auth: {
        signOut: mockSignOut,
      },
    });
  });

  /**
   * TC-NAV-001: Âü∫Êú¨ÁöÑ„Å™„É¨„É≥„ÉÄ„É™„É≥„Ç∞
   * Priority: P0 (Critical)
   * Test Type: Unit
   */
  describe('TC-NAV-001: Âü∫Êú¨ÁöÑ„Å™„É¨„É≥„ÉÄ„É™„É≥„Ç∞', () => {
    it('„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Åß„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„Éê„Éº„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
      jest.spyOn(navigation, 'usePathname').mockReturnValue('/dashboard');

      render(<Navbar />);

      expect(screen.getByText('CouplePlan')).toBeInTheDocument();
      expect(screen.getByText('üè† „Éõ„Éº„É†')).toBeInTheDocument();
    });

    it('„É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„Åß„ÅØ„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„Éê„Éº„ÇíË°®Á§∫„Åó„Å™„ÅÑ', () => {
      // jest.setup„ÅÆ„É¢„ÉÉ„ÇØ„Çí‰∏äÊõ∏„Åç
      const usePathnameSpy = jest.spyOn(navigation, 'usePathname');
      usePathnameSpy.mockReturnValueOnce('/login');

      const { container } = render(<Navbar />);

      expect(container.firstChild).toBeNull();
      usePathnameSpy.mockRestore();
    });

    it('„Çµ„Ç§„É≥„Ç¢„ÉÉ„Éó„Éö„Éº„Ç∏„Åß„ÅØ„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„Éê„Éº„ÇíË°®Á§∫„Åó„Å™„ÅÑ', () => {
      const usePathnameSpy = jest.spyOn(navigation, 'usePathname');
      usePathnameSpy.mockReturnValueOnce('/signup');

      const { container } = render(<Navbar />);

      expect(container.firstChild).toBeNull();
      usePathnameSpy.mockRestore();
    });

    it('„Éà„ÉÉ„Éó„Éö„Éº„Ç∏„Åß„ÅØ„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„Éê„Éº„ÇíË°®Á§∫„Åó„Å™„ÅÑ', () => {
      const usePathnameSpy = jest.spyOn(navigation, 'usePathname');
      usePathnameSpy.mockReturnValueOnce('/');

      const { container } = render(<Navbar />);

      expect(container.firstChild).toBeNull();
      usePathnameSpy.mockRestore();
    });
  });

  /**
   * TC-NAV-002: „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„É™„É≥„ÇØ
   * Priority: P0 (Critical)
   * Test Type: Unit
   */
  describe('TC-NAV-002: „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„É™„É≥„ÇØ', () => {
    beforeEach(() => {
      jest.spyOn(navigation, 'usePathname').mockReturnValue('/dashboard');
    });

    it('ÂÖ®„Å¶„ÅÆ‰∏ªË¶Å„Å™„É™„É≥„ÇØ„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
      render(<Navbar />);

      expect(screen.getAllByText('üè† „Éõ„Éº„É†')).toHaveLength(1);
      expect(screen.getAllByText('üìÖ „Éó„É©„É≥‰∏ÄË¶ß')).toHaveLength(1);
      expect(screen.getAllByText('‚ú® „Éó„É©„É≥‰ΩúÊàê')).toHaveLength(1);
      expect(screen.getAllByText('üë• „Éë„Éº„Éà„Éä„Éº')).toHaveLength(1);
      expect(screen.getAllByText('‚öôÔ∏è Ë®≠ÂÆö')).toHaveLength(1);
    });

    it('„É≠„Ç¥„Åå„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å´„É™„É≥„ÇØ„Åó„Å¶„ÅÑ„Çã', () => {
      render(<Navbar />);

      const logo = screen.getByText('CouplePlan').closest('a');
      expect(logo).toHaveAttribute('href', '/dashboard');
    });
  });

  /**
   * TC-NAV-003: „Ç¢„ÇØ„ÉÜ„Ç£„ÉñÁä∂ÊÖã
   * Priority: P1 (High)
   * Test Type: Unit
   */
  describe('TC-NAV-003: „Ç¢„ÇØ„ÉÜ„Ç£„ÉñÁä∂ÊÖã', () => {
    it('„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Éö„Éº„Ç∏„Åß„Éõ„Éº„É†„Åå„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å´„Å™„Çã', () => {
      const usePathnameSpy = jest.spyOn(navigation, 'usePathname');
      usePathnameSpy.mockReturnValue('/dashboard');

      render(<Navbar />);

      const homeLink = screen.getAllByText('üè† „Éõ„Éº„É†')[0].closest('a');
      expect(homeLink?.className).toContain('bg-rose-100');

      usePathnameSpy.mockRestore();
    });

    it('„Éó„É©„É≥‰∏ÄË¶ß„Éö„Éº„Ç∏„Åß„Éó„É©„É≥‰∏ÄË¶ß„Åå„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å´„Å™„Çã', () => {
      const usePathnameSpy = jest.spyOn(navigation, 'usePathname');
      usePathnameSpy.mockReturnValue('/dashboard/plans');

      render(<Navbar />);

      const plansLink = screen.getAllByText('üìÖ „Éó„É©„É≥‰∏ÄË¶ß')[0].closest('a');
      expect(plansLink?.className).toContain('bg-rose-100');

      usePathnameSpy.mockRestore();
    });

    it('„Éó„É≠„Éï„Ç£„Éº„É´„Éö„Éº„Ç∏„ÅßË®≠ÂÆö„Åå„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å´„Å™„Çã', () => {
      const usePathnameSpy = jest.spyOn(navigation, 'usePathname');
      usePathnameSpy.mockReturnValue('/dashboard/profile');

      render(<Navbar />);

      const profileLink = screen.getAllByText('‚öôÔ∏è Ë®≠ÂÆö')[0].closest('a');
      expect(profileLink?.className).toContain('bg-rose-100');

      usePathnameSpy.mockRestore();
    });
  });

  /**
   * TC-NAV-004: „É≠„Ç∞„Ç¢„Ç¶„ÉàÊ©üËÉΩ
   * Priority: P0 (Critical)
   * Test Type: Unit
   */
  describe('TC-NAV-004: „É≠„Ç∞„Ç¢„Ç¶„ÉàÊ©üËÉΩ', () => {
    it('„É≠„Ç∞„Ç¢„Ç¶„Éà„Éú„Çø„É≥„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
      const usePathnameSpy = jest.spyOn(navigation, 'usePathname');
      usePathnameSpy.mockReturnValue('/dashboard');

      render(<Navbar />);

      expect(screen.getAllByText('„É≠„Ç∞„Ç¢„Ç¶„Éà')).toHaveLength(1);
      usePathnameSpy.mockRestore();
    });

    it('„É≠„Ç∞„Ç¢„Ç¶„Éà„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„Çµ„Ç§„É≥„Ç¢„Ç¶„ÉàÂá¶ÁêÜ„ÅåÂÆüË°å„Åï„Çå„Çã', async () => {
      const usePathnameSpy = jest.spyOn(navigation, 'usePathname');
      usePathnameSpy.mockReturnValue('/dashboard');
      mockSignOut.mockResolvedValue({ error: null });

      render(<Navbar />);

      const logoutButton = screen.getAllByText('„É≠„Ç∞„Ç¢„Ç¶„Éà')[0];
      fireEvent.click(logoutButton);

      await waitFor(() => {
        expect(mockSignOut).toHaveBeenCalled();
      });

      // push„ÅØÈùûÂêåÊúüÂá¶ÁêÜ„ÅÆÂæå„Å´Âëº„Å∞„Çå„Çã
      expect(mockPush).toHaveBeenCalledWith('/login');
      usePathnameSpy.mockRestore();
    });
  });

  /**
   * TC-NAV-005: „É¢„Éê„Ç§„É´„É°„Éã„É•„Éº
   * Priority: P1 (High)
   * Test Type: Unit
   */
  describe('TC-NAV-005: „É¢„Éê„Ç§„É´„É°„Éã„É•„Éº', () => {
    beforeEach(() => {
      jest.spyOn(navigation, 'usePathname').mockReturnValue('/dashboard');
    });

    it('„É¢„Éê„Ç§„É´„É°„Éã„É•„Éº„Éú„Çø„É≥„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
      render(<Navbar />);

      const menuButton = screen.getByLabelText('„É°„Éã„É•„Éº');
      expect(menuButton).toBeInTheDocument();
    });

    it('„É°„Éã„É•„Éº„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„É¢„Éê„Ç§„É´„É°„Éã„É•„Éº„ÅåÈñã„Åè', () => {
      render(<Navbar />);

      // ÂàùÊúüÁä∂ÊÖã„Åß„ÅØ„É¢„Éê„Ç§„É´„É°„Éã„É•„Éº„ÅØÈùûË°®Á§∫
      expect(screen.queryByText('üìÖ „Éó„É©„É≥‰∏ÄË¶ß')).toBeInTheDocument();

      const menuButton = screen.getByLabelText('„É°„Éã„É•„Éº');
      fireEvent.click(menuButton);

      // „É¢„Éê„Ç§„É´„É°„Éã„É•„Éº„ÅåË°®Á§∫„Åï„Çå„ÇãÔºà„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Å®„É¢„Éê„Ç§„É´„Åß2„Å§Ë°®Á§∫„Åï„Çå„ÇãÔºâ
      expect(screen.getAllByText('üìÖ „Éó„É©„É≥‰∏ÄË¶ß').length).toBeGreaterThan(1);
    });

    it('„É°„Éã„É•„Éº„ÇíÈñã„ÅÑ„ÅüÂæå„ÄÅÂÜçÂ∫¶„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®Èñâ„Åò„Çã', () => {
      render(<Navbar />);

      const menuButton = screen.getByLabelText('„É°„Éã„É•„Éº');

      // „É°„Éã„É•„Éº„ÇíÈñã„Åè
      fireEvent.click(menuButton);
      expect(screen.getAllByText('üìÖ „Éó„É©„É≥‰∏ÄË¶ß').length).toBeGreaterThan(1);

      // ÂÜçÂ∫¶„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶Èñâ„Åò„Çã
      fireEvent.click(menuButton);
      expect(screen.getAllByText('üìÖ „Éó„É©„É≥‰∏ÄË¶ß')).toHaveLength(1);
    });

    it('„É¢„Éê„Ç§„É´„É°„Éã„É•„Éº„ÅÆ„É™„É≥„ÇØ„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„É°„Éã„É•„Éº„ÅåÈñâ„Åò„Çã', () => {
      render(<Navbar />);

      const menuButton = screen.getByLabelText('„É°„Éã„É•„Éº');
      fireEvent.click(menuButton);

      // „É¢„Éê„Ç§„É´„É°„Éã„É•„Éº„ÅÆ„É™„É≥„ÇØ„Çí„ÇØ„É™„ÉÉ„ÇØ
      const mobileLinks = screen.getAllByText('üìÖ „Éó„É©„É≥‰∏ÄË¶ß');
      fireEvent.click(mobileLinks[mobileLinks.length - 1]);

      // „É°„Éã„É•„Éº„ÅåÈñâ„Åò„ÇãÔºà„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„ÅÆ1„Å§„Å†„Åë„Å´„Å™„ÇãÔºâ
      waitFor(() => {
        expect(screen.getAllByText('üìÖ „Éó„É©„É≥‰∏ÄË¶ß')).toHaveLength(1);
      });
    });
  });

  /**
   * TC-NAV-006: „Ç¢„Ç§„Ç≥„É≥Âàá„ÇäÊõø„Åà
   * Priority: P2 (Medium)
   * Test Type: Unit
   */
  describe('TC-NAV-006: „Ç¢„Ç§„Ç≥„É≥Âàá„ÇäÊõø„Åà', () => {
    it('„É°„Éã„É•„Éº„ÅåÈñâ„Åò„Å¶„ÅÑ„ÇãÊôÇ„ÅØ„Éè„É≥„Éê„Éº„Ç¨„Éº„Ç¢„Ç§„Ç≥„É≥„ÇíË°®Á§∫', () => {
      jest.spyOn(navigation, 'usePathname').mockReturnValue('/dashboard');

      render(<Navbar />);

      const menuButton = screen.getByLabelText('„É°„Éã„É•„Éº');
      const svg = menuButton.querySelector('svg');
      const path = svg?.querySelector('path');

      expect(path?.getAttribute('d')).toContain('M4 6h16M4 12h16M4 18h16');
    });

    it('„É°„Éã„É•„Éº„ÅåÈñã„ÅÑ„Å¶„ÅÑ„ÇãÊôÇ„ÅØÈñâ„Åò„Çã„Ç¢„Ç§„Ç≥„É≥„ÇíË°®Á§∫', () => {
      jest.spyOn(navigation, 'usePathname').mockReturnValue('/dashboard');

      render(<Navbar />);

      const menuButton = screen.getByLabelText('„É°„Éã„É•„Éº');
      fireEvent.click(menuButton);

      const svg = menuButton.querySelector('svg');
      const path = svg?.querySelector('path');

      expect(path?.getAttribute('d')).toContain('M6 18L18 6M6 6l12 12');
    });
  });
});
