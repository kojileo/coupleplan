generator client {
  provider = "prisma-client-js"
  previewFeatures = ["metrics"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @unique @map("user_id") @db.Uuid
  name      String?  @db.VarChar(255)
  email     String?  @unique @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz(6)
  isAdmin   Boolean  @default(false) @map("is_admin")
  likes     Like[]
  plans     Plan[]

  @@map("profiles")
}

model Plan {
  id          String    @id @default(cuid())
  title       String    @db.VarChar(255)
  description String
  date        DateTime? @db.Timestamptz(6)
  region      String?   @db.VarChar(50)
  budget      Int       @default(0)
  isPublic    Boolean   @default(false) @map("is_public")
  isRecommended Boolean @default(false) @map("is_recommended")
  category    String?   @db.VarChar(50)
  userId      String    @map("user_id") @db.Uuid
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
  likes       Like[]
  profile     Profile   @relation(fields: [userId], references: [userId], onDelete: Cascade)
  locations   Location[]

  @@index([userId])
  @@map("plans")
}

model Location {
  id        String   @id @default(cuid())
  url       String   @db.VarChar(255)
  name      String?  @db.VarChar(255)
  planId    String   @map("plan_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  plan      Plan     @relation(fields: [planId], references: [id], onDelete: Cascade)

  @@index([planId])
  @@map("locations")
}

model Like {
  id        String   @id @default(cuid())
  planId    String   @map("plan_id")
  userId    String   @map("user_id") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)
  plan      Plan     @relation(fields: [planId], references: [id], onDelete: Cascade)
  profile   Profile  @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@unique([planId, userId])
  @@index([userId])
  @@index([planId])
  @@map("likes")
}
