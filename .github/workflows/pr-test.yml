name: PR Test

on:
  pull_request:
    branches: [main, develop]

env:
  NODE_ENV: test
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.STAGING_SUPABASE_SERVICE_ROLE_KEY }}
  GEMINI_API_KEY: ${{ secrets.STAGING_GEMINI_API_KEY }}
  AI_PROVIDER: ${{ secrets.STAGING_AI_PROVIDER }}
  AI_MODEL: ${{ secrets.STAGING_AI_MODEL }}
  AI_MAX_TOKENS: ${{ secrets.STAGING_AI_MAX_TOKENS }}
  AI_TEMPERATURE: ${{ secrets.STAGING_AI_TEMPERATURE }}

jobs:
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npx tsc --noEmit

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/coverage-final.json
          flags: unit
          fail_ci_if_error: false

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests
        run: npm run test:integration

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [lint, unit-test, integration-test]
    if: always()
    steps:
      - name: Check test results
        run: |
          echo "✅ Lint & Type Check: ${{ needs.lint.result }}"
          echo "✅ Unit Tests: ${{ needs.unit-test.result }}"
          echo "✅ Integration Tests: ${{ needs.integration-test.result }}"

          if [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.unit-test.result }}" != "success" ] || \
             [ "${{ needs.integration-test.result }}" != "success" ]; then
            echo "❌ Some tests failed"
            exit 1
          fi

          echo "✅ All tests passed!"
