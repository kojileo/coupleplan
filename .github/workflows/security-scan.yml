name: Weekly Security Scan

on:
  schedule:
    - cron: '0 15 * * 0' # 毎週日曜0時JST（15時UTC）
  workflow_dispatch: # 手動実行も可能

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: coupleplan-staging
  REGION: asia-northeast1

jobs:
  security-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Pull latest image from GCR
        run: |
          docker pull gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest || \
          echo "⚠️ No image found in registry. Building locally..."

      - name: Build image if not in registry
        if: failure()
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_SUPABASE_URL=${{ secrets.STAGING_SUPABASE_URL }} \
            --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.STAGING_SUPABASE_ANON_KEY }} \
            -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest \
            .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Generate detailed report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest
          format: 'table'
          output: 'trivy-report.txt'

      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-report-${{ github.run_number }}
          path: trivy-report.txt
          retention-days: 30

      - name: Check for critical vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL'

      - name: Security scan summary
        if: always()
        run: |
          echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "- **Scan Date**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Detailed results have been uploaded to GitHub Security tab." >> $GITHUB_STEP_SUMMARY
