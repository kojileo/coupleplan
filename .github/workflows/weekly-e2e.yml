name: Weekly E2E Test

on:
  schedule:
    - cron: '0 15 * * 0' # 毎週日曜日0時JST（15時UTC）
  workflow_dispatch:

env:
  NODE_ENV: test
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.STAGING_SUPABASE_SERVICE_ROLE_KEY }}
  GEMINI_API_KEY: ${{ secrets.STAGING_GEMINI_API_KEY }}
  AI_PROVIDER: ${{ secrets.STAGING_AI_PROVIDER }}
  AI_MODEL: ${{ secrets.STAGING_AI_MODEL }}
  AI_MAX_TOKENS: ${{ secrets.STAGING_AI_MAX_TOKENS }}
  AI_TEMPERATURE: ${{ secrets.STAGING_AI_TEMPERATURE }}

jobs:
  e2e-cross-browser:
    name: E2E Tests (${{ matrix.browser }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium] # Chromiumのみに限定してコスト削減
        shard: [1, 2] # シャード数を削減
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run E2E tests
        run: npm run test:e2e -- --project=${{ matrix.browser }} --shard=${{ matrix.shard }}/2

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.browser }}-shard-${{ matrix.shard }}
          path: playwright-report/
          retention-days: 7

  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
        continue-on-error: true

      - name: Get Staging URL
        id: get-url
        run: |
          # Cloud Runからステージング環境URLを取得
          if [ -n "${{ secrets.GCP_SA_KEY }}" ]; then
            gcloud run services describe coupleplan-staging \
              --region=asia-northeast1 \
              --format='value(status.url)' > staging_url.txt || echo "https://staging-coupleplan-xxx.a.run.app" > staging_url.txt
          else
            echo "https://staging-coupleplan-xxx.a.run.app" > staging_url.txt
          fi

          STAGING_URL=$(cat staging_url.txt)
          echo "STAGING_URL=$STAGING_URL" >> $GITHUB_ENV
          echo "Staging URL: $STAGING_URL"

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            ${{ env.STAGING_URL }}
            ${{ env.STAGING_URL }}/dashboard
            ${{ env.STAGING_URL }}/login
          uploadArtifacts: true
          temporaryPublicStorage: true

  cloud-run-health-check:
    name: Cloud Run Health Check
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
        continue-on-error: true

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        continue-on-error: true

      - name: Check service status
        run: |
          if [ -n "${{ secrets.GCP_SA_KEY }}" ]; then
            echo "📊 Fetching Cloud Run service status..."
            gcloud run services describe coupleplan-staging \
              --region=asia-northeast1 \
              --format="table(status.url, status.latestCreatedRevisionName, status.traffic)"
          else
            echo "⚠️ GCP credentials not configured. Skipping Cloud Run health check."
          fi

  weekly-summary:
    name: Weekly Test Summary
    runs-on: ubuntu-latest
    needs: [e2e-cross-browser, performance-test, cloud-run-health-check]
    if: always()
    steps:
      - name: Summary
        run: |
          echo "## 📅 Weekly E2E Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **E2E Tests (Chromium)**: ${{ needs.e2e-cross-browser.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Performance Test**: ${{ needs.performance-test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Cloud Run Health**: ${{ needs.cloud-run-health-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Weekly test completed at: $(date -u)" >> $GITHUB_STEP_SUMMARY
